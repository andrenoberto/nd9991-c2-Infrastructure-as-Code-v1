AWSTemplateFormatVersion: 2010-09-09
Description: Basic network infrastructure for Udagram
Parameters:
  ProjectName:
    Description: The project name
    Type: String
  Environment:
    Description: The environmnet name
    Type: String
  VpcCidr:
    Description: The default VPC CIDR block address
    Type: String
  PublicSubnetsCidr:
    Description: The CIDR block definitions for each public subnet
    Type: CommaDelimitedList
  PrivateSubnetsCidr:
    Description: The CIDR block definitions for each private subnet
    Type: CommaDelimitedList
  AllCidr:
    Description: A CIDR block that includes all existing IPv4 addresses
    Type: String
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - VPC
        - Key: Environment
          Value: !Ref Environment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Internet Gateway
        - Key: Environment
          Value: !Ref Environment
  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Public Route Table
        - Key: Environment
          Value: !Ref Environment
  PublicRouteTableRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: !Ref AllCidr
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [0, !Ref PublicSubnetsCidr]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Public Subnet 1
        - Key: Environment
          Value: !Ref Environment
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Select [1, !Ref PublicSubnetsCidr]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Public Subnet 2
        - Key: Environment
          Value: !Ref Environment
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  NATGateway1ElasticIp:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - NAT Gateway 1 EIP
        - Key: Environment
          Value: !Ref Environment
  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway1ElasticIp.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - NAT Gateway 1
        - Key: Environment
          Value: !Ref Environment
  PrivateSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Private Subnet 1 Route Table
        - Key: Environment
          Value: !Ref Environment
  PrivateSubnet1RouteTableRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref AllCidr
      NatGatewayId: !Ref NATGateway1
      RouteTableId: !Ref PrivateSubnet1RouteTable
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [0, !Ref PrivateSubnetsCidr]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Private Subnet 1
        - Key: Environment
          Value: !Ref Environment
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      SubnetId: !Ref PrivateSubnet1
  NATGateway2ElasticIp:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - NAT Gateway 2 EIP
        - Key: Environmnet
          Value: !Ref Environment
  NATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway2ElasticIp.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - NAT Gateway 2
        - Key: Environment
          Value: !Ref Environment
  PrivateSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Private Subnet 2 Route Table
        - Key: Environment
          Value: !Ref Environment
  PrivateSubnet2RouteTableRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref AllCidr
      NatGatewayId: !Ref NATGateway2
      RouteTableId: !Ref PrivateSubnet2RouteTable
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Select [1, !Ref PrivateSubnetsCidr]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} - Private Subnet 2
        - Key: Environment
          Value: !Ref Environment
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet2RouteTable
      SubnetId: !Ref PrivateSubnet2
Outputs:
  Vpc:
    Description: The ID from the stack VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}VPC
  PublicSubnets:
    Description: A list containing all public subnets IDs
    Value:
      !Join
        - ','
        - - !Ref PublicSubnet1
          - !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}PublicSubnets
  PublicSubnet1:
    Description: The public subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}PublicSubnet1
  PublicSubnet2:
    Description: The public subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}PublicSubnet2
  PrivateSubnets:
    Description: A list containing all private subnets IDs
    Value:
      !Join
        - ','
        - - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}PrivateSubnets
  PrivateSubnet1:
    Description: The private subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}PrivateSubnet1
  PrivateSubnet2:
    Description: The private subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}PrivateSubnet2
